La inclusión de la cabecera #include <immintrin.h> en un programa en C o C++ permite el uso de las instrucciones de SIMD (Single Instruction, Multiple Data) 
de la arquitectura x86, en particular las instrucciones AVX (Advanced Vector Extensions) y otras extensiones avanzadas de Intel.

Propósito de #include <immintrin.h>
1. Instrucciones AVX (Advanced Vector Extensions):
* Las instrucciones AVX son un conjunto de instrucciones de 256 bits que permiten realizar operaciones vectoriales en datos de punto flotante y enteros. 
Esto significa que puedes realizar la misma operación en múltiples datos en paralelo, lo que puede mejorar significativamente el rendimiento en aplicaciones 
que requieren procesamiento intensivo de datos, como gráficos, simulaciones científicas, procesamiento de señales, etc.

2. Uso de registros SIMD:
* La cabecera immintrin.h proporciona tipos y funciones para trabajar con registros SIMD, como los tipos __m256 (para operaciones con vectores de 8 flotantes 
de 32 bits) y __m256i (para operaciones con vectores de enteros).

3. Optimización del rendimiento:
* Al usar estas instrucciones vectoriales, puedes escribir código que aproveche mejor la arquitectura de la CPU, logrando un rendimiento superior al de las 
implementaciones escalares tradicionales.